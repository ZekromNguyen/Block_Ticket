{
  "RateLimiting": {
    "IsEnabled": true,
    "RedisConnectionString": "localhost:6379",
    "RedisKeyPrefix": "event_rate_limit:",
    "UseSlidingWindow": true,
    "CacheTimeoutSeconds": 60,
    "FailOpen": true,
    "TimeoutMilliseconds": 100,
    "IncludeHeaders": true,
    "Headers": {
      "Limit": "X-RateLimit-Limit",
      "Remaining": "X-RateLimit-Remaining",
      "Reset": "X-RateLimit-Reset",
      "RetryAfter": "Retry-After"
    },
    "Rules": [
      {
        "Id": "ip_global",
        "Type": "IpAddress",
        "Limit": 100,
        "WindowSizeInSeconds": 60,
        "Priority": 1,
        "IsEnabled": true,
        "CustomMessage": "Too many requests from your IP address. Please try again later."
      },
      {
        "Id": "client_global",
        "Type": "Client",
        "Limit": 500,
        "WindowSizeInSeconds": 3600,
        "Priority": 2,
        "IsEnabled": true,
        "CustomMessage": "Client rate limit exceeded. Please reduce request frequency."
      },
      {
        "Id": "organization_global",
        "Type": "Organization",
        "Limit": 1000,
        "WindowSizeInSeconds": 3600,
        "Priority": 3,
        "IsEnabled": true,
        "CustomMessage": "Organization rate limit exceeded."
      },
      {
        "Id": "reservations_endpoint",
        "Type": "Endpoint",
        "Limit": 10,
        "WindowSizeInSeconds": 60,
        "EndpointPattern": "/api/reservations",
        "HttpMethods": ["POST", "PUT", "DELETE"],
        "Priority": 10,
        "IsEnabled": true,
        "CustomMessage": "Reservation rate limit exceeded. Please wait before making another reservation."
      },
      {
        "Id": "pricing_endpoint",
        "Type": "Endpoint",
        "Limit": 20,
        "WindowSizeInSeconds": 60,
        "EndpointPattern": "/api/pricing",
        "Priority": 9,
        "IsEnabled": true,
        "CustomMessage": "Pricing API rate limit exceeded."
      },
      {
        "Id": "auth_endpoint",
        "Type": "Endpoint",
        "Limit": 5,
        "WindowSizeInSeconds": 60,
        "EndpointPattern": "/api/auth",
        "HttpMethods": ["POST"],
        "Priority": 15,
        "IsEnabled": true,
        "CustomMessage": "Authentication rate limit exceeded. Please wait before trying again."
      },
      {
        "Id": "admin_endpoint",
        "Type": "Endpoint",
        "Limit": 50,
        "WindowSizeInSeconds": 3600,
        "EndpointPattern": "/api/admin",
        "Priority": 12,
        "IsEnabled": true,
        "CustomMessage": "Admin API rate limit exceeded."
      }
    ]
  },
  "SecurityHeaders": {
    "EnableHsts": true,
    "HstsValue": "max-age=31536000; includeSubDomains; preload",
    "EnableCsp": true,
    "CspValue": "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' https:; connect-src 'self'; frame-ancestors 'none'; base-uri 'self'; form-action 'self';",
    "EnableXFrameOptions": true,
    "XFrameOptionsValue": "DENY",
    "EnableXContentTypeOptions": true,
    "EnableXXssProtection": true,
    "XXssProtectionValue": "1; mode=block",
    "EnableReferrerPolicy": true,
    "ReferrerPolicyValue": "strict-origin-when-cross-origin",
    "EnablePermissionsPolicy": true,
    "PermissionsPolicyValue": "camera=(), microphone=(), geolocation=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=()",
    "RemoveServerHeader": true,
    "CustomHeaders": {
      "X-Content-Security-Policy": "default-src 'self'",
      "X-Permitted-Cross-Domain-Policies": "none",
      "Cross-Origin-Embedder-Policy": "require-corp",
      "Cross-Origin-Opener-Policy": "same-origin",
      "Cross-Origin-Resource-Policy": "same-origin"
    }
  },
  "RequestSizeLimits": {
    "MaxRequestSize": 1048576,
    "MaxFileUploadSize": 10485760,
    "EndpointLimits": {
      "/api/events": 524288,
      "/api/reservations": 65536,
      "/api/auth": 16384,
      "/api/users": 32768,
      "/api/files": 10485760,
      "/api/images": 5242880
    }
  },
  "Jwt": {
    "Key": "your-super-secret-jwt-key-that-is-at-least-256-bits-long-for-security",
    "Issuer": "BlockTicket.EventService",
    "Audience": "BlockTicket.Clients",
    "ExpiryMinutes": 60,
    "RefreshTokenExpiryDays": 7
  },
  "Cors": {
    "AllowedOrigins": [
      "https://localhost:3000",
      "https://blockticket.com",
      "https://*.blockticket.com"
    ],
    "AllowedMethods": ["GET", "POST", "PUT", "DELETE", "OPTIONS"],
    "AllowedHeaders": [
      "Content-Type",
      "Authorization",
      "X-API-Key",
      "X-Correlation-ID",
      "X-Organization-ID"
    ],
    "ExposedHeaders": [
      "X-RateLimit-Limit",
      "X-RateLimit-Remaining",
      "X-RateLimit-Reset",
      "X-Correlation-ID"
    ],
    "AllowCredentials": true,
    "PreflightMaxAge": 86400
  },
  "Security": {
    "RequireHttps": true,
    "RequireAuthentication": true,
    "EnableAuditLogging": true,
    "EnableSecurityEventLogging": true,
    "MaxFailedAuthAttempts": 5,
    "AccountLockoutMinutes": 15,
    "PasswordPolicy": {
      "MinLength": 8,
      "RequireUppercase": true,
      "RequireLowercase": true,
      "RequireDigit": true,
      "RequireSpecialCharacter": true,
      "MaxAge": 90,
      "PreventReuse": 5
    },
    "SessionSecurity": {
      "TimeoutMinutes": 30,
      "RequireReauthentication": true,
      "SecureCookies": true,
      "SameSiteCookies": "Strict"
    }
  },
  "Monitoring": {
    "EnableMetrics": true,
    "EnableTracing": true,
    "EnableHealthChecks": true,
    "MetricsEndpoint": "/metrics",
    "HealthCheckEndpoint": "/health",
    "AlertingThresholds": {
      "HighRateLimitViolations": 10,
      "BruteForceAttempts": 5,
      "ErrorRate": 0.05,
      "ResponseTime": 5000
    }
  }
}
